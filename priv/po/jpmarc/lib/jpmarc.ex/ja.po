msgid ""
msgstr ""
"Project-Id-Version: \n"
"POT-Creation-Date: \n"
"PO-Revision-Date: 2017-02-15 11:45+0900\n"
"Last-Translator: Keiji Suzuki <EMAIL@ADDRESS>\n"
"Language-Team: Japanese\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Generator: Poedit 1.8.11\n"

#. TRANSLATORS: def JPMarc.to_xml(records)
#: lib/jpmarc.ex:39
msgid ""
"Return the MARCXML Format of JPMarc.Record struct (One or List of that)\n"
msgstr ""
"JPMarc.Record構造体（単体または構造体のリスト）のMARCXML形式の文字列を返しま"
"す。\n"

#. TRANSLATORS: def JPMarc.to_json(records)
#: lib/jpmarc.ex:49
msgid "Return the JSON Format of JPMarc.Record struct (One or List of that)\n"
msgstr ""
"JPMarc.Record構造体（単体または構造体のリスト）のJSON形式の文字列を返しま"
"す。\n"

#. TRANSLATORS: Elixir.JPMarc Summary
#: lib/jpmarc.ex:2
msgid "  Tools for working wiht JPMARC records\n"
msgstr "JPMARCを扱うツールです。\n"

#. TRANSLATORS: def JPMarc.to_marc(records)
#: lib/jpmarc.ex:30
msgid ""
"  Return the String representing MARC Format of the JPMarc.Record struct "
"(one or List of that)\n"
msgstr ""
"JPMarc.Record構造体（単体または構造体のリスト）のMARC形式の文字列を返しま"
"す。\n"

#. TRANSLATORS: def JPMarc.parse_file(file)
#: lib/jpmarc.ex:10
msgid "  Parse a marc file and return List of `JPMarc.Record` struct\n"
msgstr ""
"MARC形式の文字列をパースして`JPMarc.Record`構造体を返します。\n"
"\n"

#. TRANSLATORS: def JPMarc.parse_marc(file)
#: lib/jpmarc.ex:24
msgid ""
"  Parse a marc file which contains one marc record, and return a `JPMarc."
"Record` struct\n"
msgstr ""
"MARCレコードを1つ含むファイルをパースして`JPMarc.Record`構造体を返します。\n"
"\n"

#~ msgid "  Sort its fields by tag and subfields of field\n"
#~ msgstr "タグとインジケータでフィールドをソートします。\n"

#~ msgid ""
#~ "  Parse a marc file and return `JPMarc` struct or nil if a error occures "
#~ "when reading the specific file\n"
#~ msgstr ""
#~ "MARCファイルのパスである文字列を受け取り、`JPMarc`構造体を返します。ファ"
#~ "イルの読み込み時にエラーが発生した場合は、`nil`を返します。\n"

#~ msgid "  Library for parsing JPMARC\n"
#~ msgstr "JPMARCを解析するライブラリ\n"

#~ msgid ""
#~ "    Type that represents `JPMarc` struct\n"
#~ "\n"
#~ "    This is constructed with `:leader` as `JPMarc.Leader.t`, `:fiels` as "
#~ "List of `JPMarc.ControlField.t` or `JPMarc.DataField.t`\n"
#~ msgstr ""
#~ "`JPMarc`構造体の型。\n"
#~ "\n"
#~ "`JPMarc.Leader.t`の`:leader`および、`JPMarc.ControlField.t`\n"
#~ "または`JPMarc.DataField.t`のリストの`:fields`で構成されます。\n"
